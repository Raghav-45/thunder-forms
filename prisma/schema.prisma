// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model profiles {
  id           String  @id @db.Uuid
  email        String? @db.VarChar(256)
  display_name String? @db.VarChar(256)

  forms forms[]
}

model forms {
  id             String    @id @default(cuid())
  title          String
  description    String
  fields         Json
  createdAt      DateTime  @default(now())
  expiresAt      DateTime? // Expiration date for the form, null for unlimited
  maxSubmissions Int? // Maximum number of submissions allowed, null for unlimited
  redirectUrl    String? // URL to redirect after form submission, null for default behavior

  profiles profiles @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  userId   String   @db.Uuid

  responses response[]
  templates templates[]
}

model response {
  id        String   @id @default(cuid())
  data      Json
  createdAt DateTime @default(now())

  forms   forms  @relation(fields: [formsId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  formsId String
}

model templates {
  id           String   @id @default(cuid())
  slug         String   @unique
  title        String
  description  String
  createdBy    String
  createdAt    DateTime @default(now())
  thumbnailUrl String

  // This allows you to easily create a template from an existing form.
  form   forms?  @relation(fields: [formId], references: [id], onDelete: SetNull, onUpdate: NoAction)
  formId String? // Foreign key to the forms model
}
